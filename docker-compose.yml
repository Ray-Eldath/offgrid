version: "3"

services:

  mysql:
    image: mysql:latest
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./offgrid/db_data:/var/lib/mysql
      - ./database_init.mysql.sql:/docker-entrypoint-initdb.d/dsatabase_init.mysql.sql:ro
    ports:
      - "127.0.0.1:3306:3306"
    networks:
      - offgrid
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${OFFGRID_DATABASE_ROOT_PASSWORD}
      - MYSQL_USER=offgrid
      - MYSQL_PASSWORD=${OFFGRID_DATABASE_PASSWORD}
      - TZ=Asia/Shanghai

  graphite:
    image: graphiteapp/graphite-statsd
    restart: always
    ports:
      - "127.0.0.1:8100:80"
      - "127.0.0.1:2003-2004:2003-2004"
      - "127.0.0.1:2023-2024:2023-2024"
      - "127.0.0.1:8125:8125/udp"
      - "127.0.0.1:8126:8126"
    networks:
      - offgrid

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./offgrid/grafana:/var/lib/grafana
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      - GF_AUTH_BASIC=false
      - GF_AUTH_GENERIC_OAUTH_ENABLED=true
      - GF_AUTH_GENERIC_OAUTH_CLIENT_ID=grafana
      - GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=${OFFGRID_GRAFANA_OAUTH_CLIENT_SECRET}
      - GF_AUTH_GENERIC_OAUTH_SCOPES=openid profile grafana
      - GF_AUTH_GENERIC_OAUTH_AUTH_URL=${OFFGRID_HOST}/service/oauth/oauth2/auth
      - GF_AUTH_GENERIC_OAUTH_TOKEN_URL=${OFFGRID_HOST}/service/oauth/oauth2/token
      - GF_AUTH_GENERIC_OAUTH_API_URL=${OFFGRID_HOST}/service/oauth/userinfo
      - GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP=true
      - GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH=role
      - GF_AUTH_GENERIC_OAUTH_NAME=Offgrid
      - GF_DATABASE_URL=mysql://root:${OFFGRID_DATABASE_ROOT_PASSWORD}@mysql:3306/grafana
      - GF_DATABASE_TYPE=mysql
      - GF_SERVER_ROOT_URL=${OFFGRID_GRAFANA_HOST}
      - GF_SERVER_DOMAIN=${OFFGRID_GRAFANA_DOMAIN}

  hydra:
    depends_on:
      - hydra-migrate
    image: oryd/hydra:latest
    ports:
      - "127.0.0.1:4444:4444" # Public port
      - "127.0.0.1:4445:4445" # Admin port
      - "127.0.0.1:5555:5555" # Port for hydra token user
    networks:
      - offgrid
    restart: unless-stopped
    command:
      serve all --dangerous-force-http
    environment:
      - URLS_SELF_ISSUER=${OFFGRID_HYDRA_HOST}
      - URLS_LOGIN=${OFFGRID_HOST}/hydra/login
      - URLS_CONSENT=${OFFGRID_HOST}/hydra/consent
      - URLS_LOGOUT=${OFFGRID_HOST}/hydra/logout # currently unsupported
      - DSN=mysql://root:${OFFGRID_DATABASE_ROOT_PASSWORD}@tcp(mysql:3306)/hydra?max_conns=20&max_idle_conns=4
      - SECRETS_SYSTEM=${OFFGRID_HYDRA_SECRETS_SYSTEM}
    labels:
      - "traefik.http.middlewares.gzip.compress=true"
      - "traefik.http.middlewares.stripprefix-hydra.stripprefix.prefixes=/service/oauth"
      - "traefik.http.routers.hydra.rule=Path(`/service/oauth`)"
      - "traefik.http.routers.hydra.middlewares=gzip,stripprefix-hydra"
      - "traefik.http.routers.hydra.entrypoints=http,stripprefix-hydra"

  hydra-migrate:
    image: oryd/hydra
    environment:
      - DSN=mysql://root:${OFFGRID_DATABASE_ROOT_PASSWORD}@tcp(mysql:3306)/hydra?max_conns=20&max_idle_conns=4
    networks:
      - offgrid
    command:
      migrate sql -e --yes
    restart: on-failure

  backend:
    build: "."
    #    volumes:
    #      - ./offgrid/backend:/offgrid
    ports:
      - "127.0.0.1:8080:8080"
    networks:
      - offgrid
    restart: always
    environment:
      - OFFGRID_HOST=${OFFGRID_HOST}
      - OFFGRID_HYDRA_HOST=${OFFGRID_HYDRA_HOST}
      - OFFGRID_GRAPHITE_HOST=graphite
      - OFFGRID_BACKEND_JDBC_URL=jdbc:mysql://database:3306/offgrid
      - OFFGRID_ALIYUN_DIRECTMAIL_ACCESS_KEY_ID=${OFFGRID_ALIYUN_DIRECTMAIL_ACCESS_KEY_ID}
      - OFFGRID_ALIYUN_DIRECTMAIL_ACCESS_KEY_SECRET=${OFFGRID_ALIYUN_DIRECTMAIL_ACCESS_KEY_SECRET}

  traefik:
    image: traefik:latest
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"

networks:
  offgrid:
    name: offgrid